{"version":3,"sources":["components/Card/card.js","components/Wrapper/index.js","components/Jumbotron/jumbotron.js","components/Score/score.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","name","src","image","id","onClick","shuffleCards","Wrapper","children","Jumbotron","Score","total","highscore","status","App","state","art","isClicked","score","goal","highScore","_this","includes","setState","push","length","i","j","Math","floor","random","_ref","setHighScore","_this2","this","components_Wrapper","jumbotron","map","card","key","Component","require","publish","err","ReactDOM","render","src_App","document","getElementById"],"mappings":"8KAceA,SATF,SAAAC,GAAK,OACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,MAAOC,GAAIT,EAAMS,GAChDC,QAAS,kBAAMV,EAAMW,aAAaX,EAAMS,gBCDjCG,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,WCSxBC,SARC,kBAChBb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,sBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,iFCKSW,SAVD,SAAAf,GAAK,OACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,cAAkCJ,EAAMgB,OACxCf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,cAAsCJ,EAAMiB,WAC5ChB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUJ,EAAMkB,kBC4FnBC,6MArFbC,MAAQ,CACNC,MACAC,UAAW,GACXC,MAAO,EACPC,KAAM,EACNC,UAAW,EACXP,OAAQ,MAGVP,aAAe,SAAAF,GAEb,IAAIa,EAAYI,EAAKN,MAAME,UAE3B,GAAIA,EAAUK,SAASlB,GACrBiB,EAAKE,SAAS,CACZN,UAAW,GACXC,MAAO,EACPL,OAAQ,mDAQV,GAHAI,EAAUO,KAAKpB,GAGU,IAArBa,EAAUQ,OAAd,CASAJ,EAAKE,SAAS,CACZP,MACAC,YACAC,MAAOD,EAAUQ,OACjBZ,OAAQ,MAKV,IAAK,IAAIa,EAAIV,EAAIS,OAAS,EAAGC,EAAI,EAAGA,IAAK,CACvC,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADDK,EAEpB,CAACf,EAAIW,GAAIX,EAAIU,IAA/BV,EAAIU,GAFkCK,EAAA,GAE9Bf,EAAIW,GAF0BI,EAAA,SAjBvCV,EAAKE,SAAS,CACZL,MAAO,EACPL,OAAQ,+BACRI,UAAW,QAuBnBe,aAAe,WACTX,EAAKN,MAAMG,MAAQG,EAAKN,MAAMH,WAChCS,EAAKE,SAAS,CACZX,UAAWS,EAAKN,MAAMG,iFAQnB,IAAAe,EAAAC,KACP,OACEtC,EAAAC,EAAAC,cAACqC,EAAD,KACEvC,EAAAC,EAAAC,cAACsC,EAAD,MACAxC,EAAAC,EAAAC,cAACoB,EAAD,CAAOP,MAAOuB,KAAKnB,MAAMG,MACvBC,KAAM,EACNP,UAAWsB,KAAKnB,MAAMK,UACtBP,OAAQqB,KAAKnB,MAAMF,SAEpBqB,KAAKnB,MAAMC,IAAIqB,IAAI,SAAArB,GAAG,OACrBpB,EAAAC,EAAAC,cAACwC,EAAD,CACEhC,aAAc2B,EAAK3B,aACnBF,GAAIY,EAAIZ,GACRmC,IAAKvB,EAAIZ,GACTD,MAAOa,EAAIb,kBA/ELqC,mBCTJC,EAAQ,IAEdC,QAAQ,OAAQ,SAASC,MAEjCC,IAASC,OAAOjD,EAAAC,EAAAC,cAACgD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.e1b5b3a0.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n\n\nconst Card = props => (\n    <div className=\"card img-container hover\">\n      <img alt={props.name} src={props.image} id={props.id}\n        onClick={() => props.shuffleCards(props.id)} />\n    </div>\n);\n\n\n\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\n\n\nconst Jumbotron = () => (\n  <div className=\"jumbotron jumbotron-fluid headerImg\">\n    <div className=\"container text-center\">\n      <h1 className=\"display-4\">React Clicky Game!</h1>\n      <p className=\"lead\">Click on any image to earn points, but don't click on any more than once!</p>\n    </div>\n  </div>\n  );\n  export default Jumbotron;","import React from \"react\";\nimport \"./style.css\";\n\n\nconst Score = props => (\n  <div className=\"gameScore\">\n    <h3 className=\"score\">Your Score {props.total}</h3>\n    <h3 className=\"highscore\">High Score {props.highscore}</h3>\n    <h3 className=\"status\">{props.status}</h3>\n  </div>\n);\n\n\n\nexport default Score;\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card/card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Jumbotron from \"./components/Jumbotron/jumbotron\";\nimport Score from \"./components/Score/score\";\nimport art from \"./art.json\";\n\n\n\n//TODO Fix High Score\n//Fix CSS\n//Deploy \n\nclass App extends Component {\n\n  state = {\n    art,\n    isClicked: [],\n    score: 0,\n    goal: 8,\n    highScore: 0,\n    status: \"\"\n  };\n\n  shuffleCards = id => {\n\n    let isClicked = this.state.isClicked;\n\n    if (isClicked.includes(id)) {\n      this.setState({\n        isClicked: [],\n        score: 0,\n        status: \"Game Over! You lost. Click to play again!\"\n      });\n      return;\n\n    } else {\n      isClicked.push(id)\n\n\n      if (isClicked.length === 8) {\n        this.setState({\n          score: 8,\n          status: \"You Won! Click to play again\",\n          isClicked: []\n        });\n        return;\n      }\n\n      this.setState({\n        art,\n        isClicked,\n        score: isClicked.length,\n        status: \" \"\n      });\n\n      \n    \n      for (let i = art.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [art[i], art[j]] = [art[j], art[i]];\n      }\n      \n    }\n  }\n\n  // set the high score\n  setHighScore = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({\n        highscore: this.state.score\n      });\n    }\n  };\n\n\n\n  // Map over this.state.art and render a Card component for each art object\n  render() {\n    return (\n      <Wrapper>\n        <Jumbotron/>\n        <Score total={this.state.score}\n          goal={8}\n          highscore={this.state.highScore}\n          status={this.state.status}\n        />\n        {this.state.art.map(art => (\n          <Card\n            shuffleCards={this.shuffleCards}\n            id={art.id}\n            key={art.id}\n            image={art.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nlet ghpages = require('gh-pages');\n \nghpages.publish('dist', function(err) {});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}